{"text": "Alsaade, Fawaz Waselallah and Alzahrani, Mohammed Saeed\nComput Intell Neurosci, 2022\n\n# Title\n\nClassification and Detection of Autism Spectrum Disorder Based on Deep Learning Algorithms \n\n# Keywords\n\n\n\n# Abstract\n \nAutism spectrum disorder (ASD) is a type of mental illness that can be detected by using social media data and biomedical images. Autism spectrum disorder (ASD) is a neurological disease correlated with brain growth that later impacts the physical impression of the face. Children with ASD have dissimilar facial landmarks, which set them noticeably apart from typically developed (TD) children. Novelty of the proposed research is to design a system that is based on autism spectrum disorder detection on social media and face recognition. To identify such landmarks, deep learning techniques may be used, but they require a precise technology for extracting and producing the proper patterns of the face features. This study assists communities and psychiatrists in experimentally detecting autism based on facial features, by using an uncomplicated web application based on a deep learning system, that is, a convolutional neural network with transfer learning and the flask framework. Xception, Visual Geometry Group Network (VGG19), and NASNETMobile are the pretrained models that were used for the classification task. The dataset that was used to test these models was collected from the Kaggle platform and consisted of 2,940 face images. Standard evaluation metrics such as accuracy, specificity, and sensitivity were used to evaluate the results of the three deep learning models. The Xception model achieved the highest accuracy result of 91%, followed by VGG19 (80%) and NASNETMobile (78%). \n \n\n# Body\n \n## 1. Introduction \n  \nAutism spectrum disorders (ASD) refer to a group of complex neurodevelopmental disorders of the brain such as autism, childhood disintegrative disorders, and Asperger's syndrome, which, as the term \u201cspectrum\u201d implies, have a wide range of symptoms and levels of severity [ ]. These disorders are currently included in the International Statistical Classification of Diseases and Related Health Problems under Mental and Behavioral Disorders, in the category of Pervasive Developmental Disorders [ ]. The earliest symptoms of ASD often appear within the first year of life [ \u2013 ] and may include lack of eye contact, lack of response to name calling, and indifference to caregivers. A small number of children appear to develop normally in the first year, and then show signs of autism between 18 and 24 months of age [ ], including limited and repetitive patterns of behavior, a narrow range of interests and activities, and weak language skills. As these disorders also affect how a person perceives and socializes with others, children may suddenly become introverted or aggressive in the first five years of life as they experience difficulties in interacting and communicating with society. While ASD appears in childhood, it tends to persist into adolescence and adulthood [ ]. \n\nAdvanced information technology that uses artificial intelligence (AI) models has helped to diagnose ASD early through facial pattern recognition. Yolcu et al. [ ] used the convolutional neural network (CNN) algorithm to train data for extracting components of human facial expressions and proposed the use of such algorithm to detect facial expressions in many neurological disorders [ ]. In 2018, Haque and Valles [ ], using deep learning approaches, updated the Facial Expression Recognition 2013 dataset to recognize facial expressions of autistic children. Rudovic et al. [ ] presented the CultureNet deep learning model that was used to identify 30 videos. \n\nSeveral studies have discovered important features of autism in numerous ways to detect autism, such as feature extraction [ ], eye tracking [ ], facial recognition, medical image analysis [ ], and voice recognition [ ]. However, facial recognition plays a more significant role in detecting autism than the person's emotional state. Facial recognition is a common way to identify persons and to prove that they are normal or abnormal. It involves mining pertinent information to disclose behavior patterns [ ,  ]. Duda et al. [ ] introduced a new method of producing samples of differentials between autism and attention deficit hyperactivity disorder (ADHD) and using such differentials to recognize autism. Sixty five samples of differentials on facial expressions of social responsiveness were collected for the datasets. Deshpande et al. [ ] designed metrics for studying brain activities to identify autism. AI and soft computing approaches have also been applied to detect autism. Different studies have been conducted on detecting autism, but few of them have focused on brain neuroimaging. Parikh et al. [ ] used machine learning approaches to develop a system for extracting the characteristics of autism. They gathered their dataset from 851 persons whom they classified as having and not having ASD. Thabtah and Peebles [ ] used rule-based machine learning (RBML) to detect ASD traits. Al Banna et al. [ ] developed a smart system for monitoring ASD patients during the coronavirus disease 2019 (COVID-19) pandemic. \n\nMany real-life applications of AI and machine algorithms have been designed to help solve social problems. AI has been used in all health applications to help doctors control diseases such as autism. Artificial neural networks have been particularly focused on as a way to extract features of ASD patients that can be used to discriminate between persons with and without ASD. Among the techniques that have been used or proposed to detect autism in children are deep learning techniques, particularly, CNNs and recurrent neural networks (RNNs) [ ,  ], and the bidirectional long short-term memory (BLSTM) model [ ]. Lately, more studies have been conducted to diagnose ASD using machine learning approaches such as [ ,  ], brain imaging [ \u2013 ], analysis of data on physical biomarkers [ \u2013 ], assessment of the behavior of persons with autism, and assessment of clinical data using the machine learning approach [ ]. \n\nOur study demonstrated the use of a well-trained classification model (based on transfer learning) to detect autism from an image of a child. With the advent of high-specification mobile devices, this model can readily provide a diagnostic test of putative autistic traits by taking an image with cameras. The main contributions of our research are as follows:   \nThree pretrained deep learning algorithms were applied for ASD detection: NASNETMobile, Xception, and VGG19 \n  \nThe Xception model showed the best performance of the three pretrained deep learning algorithms \n  \nA system was designed to help health officials to detect ASD through eye and face identification \n  \nThe developing system has been validated and examined using various methods. \n  \n\nThe rest of this paper is organized as follows.   describes materials and methods of pretrained deep learning models.   provides experiments.   and   provide results and discussion. The conclusion of papers is presented in  . \n\n\n## 2. Materials and Methods \n  \nThis study proposes a deep learning model based on transfer learning, namely, Xception, NASNETMobile, and VGG1 9 to detect autism using facial features of autistic and normal children. Facial features can be used to determine if a child has autism or is normal. The models extracted significant facial features from the images. One of the advantages offered by deep learning algorithms is the ability to extract very small details from an image, which a person cannot notice with the naked eye.   shows the framework of our study, from the data acquisition to the data preprocessing and loading, to the model preparation and training, and to the model performance test. \n\n### 2.1. Dataset \n  \nThis study analyzed facial images of autistic children and normal children obtained from Kaggle platform, which is publicly accessible online [ ]. The dataset consisted of 2,940 face images, half of which were of autistic children and the other half were of nonautistic children. This dataset was collected through Internet sources such as websites and Facebook pages that are interested in autism.   shows the distribution of the split dataset samples. The splitting of the input data is presented in  . \n\n\n### 2.2. Preprocessing \n  \nThe purpose of the data preprocessing was to clean and crop the images. Because the data were collected from Internet resources by Piosenka [ ], they had to be preprocessed before they could be used to train the deep learning model. The dataset creator automatically cropped the face from the original image. Then, the dataset was split into 2,540 images for training, 100 for validation, and 300 for testing. To scaling, the normalization method was applied; the dataset was rescaling the parameters of all the images from the pixel values [0, 255] to [0, 1]. \n\n\n### 2.3. Convolutional Neural Network Models \n  \nAI has been remarkably developed to assist humans in their daily life, for example, through medical applications, which are based on a branch of AI called \u201ccomputer vision.\u201d Hence, the CNN algorithm has contributed to the detection of diseases and to behavioral and psychological analysis. \n\n#### 2.3.1. Basic Components of the CNN Model \n  \nThe convolutional neural network (CNN) is one of the most famous deep learning algorithms. It takes the input image and assigns importance to learnable weights and biases in order to recognize the class of the image. The neuron can be said to be a simulation of the communication pattern of the neurons of the human brain through the interconnection and communication between cells. In this section, we will explain the basic components of the CNN model: the input layer, convolutional layer, activating function, pooling layer, fully connected layer, and output prediction. \n\n\n#### 2.3.2. Convolutional Layer with a Pooling Layer \n  \nThe input of the convolutional layer is an image as a matrix of pixel values. The objective of the convolutional layer is to reduce the images into a form that can be easily processed without losing their important features that will help to detect autism. The first layer of the CNN model is responsible for extracting low-level features such as edges and color. The build of the CNN model allowed us to add more layers to it to enable it to extract the high-level features that will help it understand images. Due to the large number of parameters outputted from the convolution layer, which may significantly prolong the arithmetic operations of the matrices, the number of weights was reduced by using one of the following two techniques: max pooling or average pooling. Max pooling is based on the maximum values in each window in the stride, while average pooling is based on the mean value of each window in the stride. In this study, the model was based on max pooling.   shows the convolutional layer and the max pooling and average pooling processes. The slide window of the kernel extracts the features from the input image and converts the image into a matrix, after which the number of the parameters is mathematically reduced through max pooling and average pooling. \n\n\n#### 2.3.3. Fully Connected Layer and Activation Function \n  \nThe fully connected (FC) layer is a nonlinear combination of the high-level features that received the input from the hidden layers and are represented as outputs. In the FC layer, the input image is represented as a column vector. The training of the model has two paths: the forward neural network and backpropagation. The forward neural network feeds form flattened output layer. In the backpropagation, the neural network minimizes the loss errors and learns more features by applying the number of the training iterations. Most deep learning models show high performance while increasing the number of the hidden layers and the training iterations, which allows the neural network to extract the low-level features deeply. The softmax classifier receives the parameters from the FC layer and calculates the properties to predict the output, as shown in  . A Softmax output of 0 means the image belongs to class 0 and a Softmax output of 1 means the image belongs to class 1 In this study, class 0 is the autism class and class 1 is the normal class. \n\n\n\n### 2.4. Deep Learning Models \n  \nThis paper is based on three pretrained models for autism detection using facial feature images: NASNetMobile, VGG19, and Xception. \n\n#### 2.4.1. Xception Model \n  \nThe Xception model was trained on the ImageNet dataset [ ,  ] for the image recognition and classification task. Xception is a deep CNN that provides new inception layers. The inception layers are built from depthwise convolution layers and are followed by a pointwise convolution layer. Transfer learning has two concepts: feature extraction and fine-tuning. In this study, the feature extraction method used the pretraining model, which was trained on the standard dataset to extract the feature from the new dataset and to remove the top layers of the model. The new top layers were added to the model for custom classification based on the number of classes. Fine-tuning has been used to adapt the generic features to a given class to avoid overwriting.   shows the network used in the Xception model architecture for extracting the image features for the dataset. The Xception architecture used the features maps, followed by a global max pooling layer and two dense layers, 128 and 64, respectively, with a rule activation function. Then, the output of the dense layers was passed to the flatten layer, which took the input as a feature map and the output as a vector. Batch normalization was used to enhance the output by avoiding over\ufb01tting. Keras supported the early-stopping method, which stopped the training when the validation loss of the model did not improve. In this model, the RMSprop optimizer was used to reduce the error learning rate or loss during the training of the parameters of the CNN model. The last layer for the output prediction used the Softmax function. \n\n\n#### 2.4.2. Visual Geometry Group Network (VGG) Model \n  \nVGG19 stands for the visual geometry group network (VGG19), a deep artificial neural network model with a 19 artificial multilayers process. Primarily, VGG19 is based on the CNN technique, is commonly implemented on the ImageNet dataset, and is valuable because of its straightforwardness, as 3\u2009\u00d7\u20093 convolutional layers are attached to its upper side to upsurge with the gravity level. To reduce the input volume size, max pooling layers were employed as assigners in VGG19. In the VGG19 structure, two FC layers were adopted with 4,096 neurons to associate each layer with others in the model. The structure of VGG19 is presented in  .   \nInput layer: the function of this layer is to take and accept an image input with a size of 224\u2009\u00d7\u2009224\u2009\u00d7\u20093. For the ImageNet race, the inventors of the model picked out the center 224\u2009\u00d7\u2009224\u2009\u00d7\u20093 patch in each image to retain the input size of the image dependable. \n  \nConvolutional layers: VGG's convolutional layers leverage a minimal receptive field, i.e., 3\u2009\u00d7\u20093, the minimum probable size that still releases up/down and left/right. The convolution stride is fixed at 1 pixel to conserve the spatial resolution after the convolution (the stride is the number of pixel shifts over the input matrix). \n  \nHidden layers: all the hidden layers in the VGG network use ReLU. VGG does not frequently influence Local Response Normalization (LRN), as it increases the memory utilization and the training time. Furthermore, it does not enhance the overall accuracy of the model. \n  \nFully connected layers: of the three FC layers, the first two had 4,096 channels each, and the third had 1,000 channels. \n  \n\n\n\n\n## 3. Experiments \n  \nThe results of the deep learning models are presented in this section, and the significant results of developing system are declared. \n\n### 3.1. Experimental Setup \n  \nThe experiment was executed on different libraries of python and hardware devices for developing an intelligent autism detection system (ADS).   shows the main requirements for the design of the ADS. \n\n\n### 3.2. Evaluation Metrics \n  \nThis study uses different types of performance evaluation metrics for the three pretrained models such as accuracy, sensitivity, and speci\ufb01city and a confusion matrix. A confusion matrix is a type of measure of classification performance that represents a table of the true and false values of the testing results. In the confusion matrix of the Xception model, the True Positives were 132 autistic children out of 150 autistic children, the False Negatives were 18 children classified as autistic children, the True Negatives were 141 correctly classified children out of the 150 normal children, and the False Positives were 9 children. \n\nThe equations for these metrics are as follows: where TP is the True Positive, FP is the False Positive, TN is the True Negative, and FN is the False Negative. Specificity is the capacity of the model to correctly identify the normal children, and sensitivity is the capacity of the model to correctly identify autistic children. \n\n\n\n## 4. Results \n  \nThis section presents the testing results of the experiments conducted to detect ASD.   summarizes the testing results of the used deep learning models. \n\nIn these experiments, three different pretrained deep learning models, namely, Xception, VGG19, and NASNetMobile were implemented to detect ASD. Each model was trained and tested to extract the traits that categorize children as autistic and as normal based on their facial features.   shows the confusion metrics of the three deep learning models. They show that the Xception model had the highest testing accuracy, 91%, of the three models, and the NASNetMobile model had the lowest performance level of 78%. Although the dataset was collected from Internet sources by the data generator, which clearly showed the difference in ages and the quality of the photography, the Xception model showed the highest accuracy, with only a small percentage of errors. \n\nThe performance of the VGG19 model for the training and validation of the data for ASD detection is presented in  , with the   y  -axis representing the score percentage and the   x  -axis indicating the number of epochs. In the training process, the accuracy of the VGG19 model rose from 56% to 85% after 25 epochs, and in the validation process, its accuracy was 82%. Its training and validation losses are presented in  . Its training loss was 3.5, and its validation loss was 2.5. \n\n shows the performance of the NASNetMobile model in detecting ASD. The graphic plot shows that the model did not have good results. Its training and validation accuracy percentages are shown in  , with the   y  -axis representing the score percentage and the   x  -axis indicating the number of epochs. Its accuracy in the training stage was 70\u201390% and in the validation stagewas 65\u201378%. It had good results in the training phase but poorer results in the validation phase than another deep learning model. Its entropy training and validation losses are presented in  . Its training loss was 4.0, and its validation loss was 3.2. Its performance plot shows overfitting in the training process, which explains why its accuracy percentage was lower. \n\nThe Xception model achieved 91% accuracy for the testing data and 100% accuracy for the training data.   shows its accuracy performance. Its accuracy in the training process was 100% and in the validation process was from 70% to 91%. It was observed that the Xception model is the appropriate deep learning model for detecting ASD. Its validation loss is shown in   as 2.0. \n\n\n## 5. Results and Discussion \n  \nPeople with autism face difficulties and challenges in understanding the world around them and in understanding their thoughts, feelings, and needs. The world surrounding a person with autism seems to him like a horror movie, and he finds some sounds and lights and even smells and tastes of foods frightening and sometimes painful. Thus, when a sudden change occurs in their world, they are terrified that no one else can understand. \n\nDiagnosing autism is very important to save the lives of many children. Developing an intelligence system based on AI can help identify autism early. In this study, three advanced deep learning models, namely, Xception, VGG19, and NASNetMobile were considered for use in diagnosing autism. The empirical results of these models were presented, and it was noted that the Xception model attained the highest accuracy of 91%. \n\nThe results of the comparative prediction analysis of the Xception model and the existing system are presented in  . Musser [ ] used the VGGFace model that attained 85% accuracy. Tamilarasi et al. [ ,  ] used deep learning ResNet50 to detect autism but with small data, that is, only 49 images. Its accuracy was 89%. Jahanara et al. [ ] introduced the VGG19 model to identify autism through facial images. The VGG19 model achieved 84% accuracy in the validation accuracy process. \n\nIn this study, three deep learning algorithms were used to detect autism. We observed that the Xception model showed significant accuracy, 91%, compared with existing systems.   shows the results of the comparison of our developing system with various existing systems. Overall, our developing system outperformed all the existing systems. \n\n\n## 6. Conclusions \n  \nInterest in child autism has risen due to the advances in global health know-how and capacities. Moreover, the number of autistic children has increased in recent years, due to which researchers and academics have intensified their efforts to uncover the causes of autism and to detect it early in order to give autistic people behavioral development treatment programs that should help them integrate into society and leave the isolation of the autistic world. \n\nThis paper evaluated the performance of three deep learning models in detecting ASD through facial features: NASNETMobile, Xception, and VGG19. Each model was trained on a publicly available dataset on the Internet, and the best result for classification accuracy was achieved by the Xception model (91%). The results of the model classification showed us the possibility of using such models based on deep learning and computer vision as automatic tools for specialists and families to accurately and more quickly diagnose autism. Computer techniques contribute to the successful conduct of complex behavioral and psychological analyses for autism diagnosis that require a longer time and great effort. \n\n \n", "metadata": {"pmcid": 8901307, "text_md5": "3daaee5cd2f975fb5f4664d66d340641", "field_positions": {"authors": [0, 55], "journal": [56, 78], "publication_year": [80, 84], "title": [95, 186], "keywords": [200, 200], "abstract": [213, 1720], "body": [1729, 22746]}, "part": 1, "chapter": 1, "page": 19, "pmid": 35265118, "doi": "10.1155/2022/8709145"}, "display_title": "pmcid: <a href=https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8901307>8901307</a> \u2014 Part 1 Chapter 1 Page 19", "list_title": "1.1.19 Classification and Detection of Autism Spectrum Disorder Based on Deep Learning Algorithms "}
